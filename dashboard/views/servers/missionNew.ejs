<%- include('../partials/header') %>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <!-- Encabezado de la página -->
  <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
    <div>
      <h1 class="text-2xl font-bold text-gray-900">Crear Nueva Misión - <%= guild.name %></h1>
      <p class="mt-2 text-sm text-gray-500">Diseña una misión para los miembros de tu servidor</p>
    </div>
    <div class="mt-4 md:mt-0 flex gap-2">
      <a href="/servers/<%= guild.id %>/missions" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        <i class="fas fa-arrow-left mr-2"></i>Volver a misiones
      </a>
    </div>
  </div>
  
  <!-- Estado de error -->
  <% if (req.query.error) { %>
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
      <div class="flex">
        <div class="flex-shrink-0">
          <i class="fas fa-exclamation-circle text-red-400"></i>
        </div>
        <div class="ml-3">
          <p class="text-sm text-red-700">Ha ocurrido un error al crear la misión.</p>
        </div>
      </div>
    </div>
  <% } %>

  <!-- Formulario para crear misión -->
  <div class="bg-white shadow rounded-lg overflow-hidden">
    <form method="POST" action="/servers/<%= guild.id %>/missions/new">
      <div class="hidden sm:block" aria-hidden="true">
        <div class="py-5">
          <div class="border-t border-gray-200"></div>
        </div>
      </div>

      <!-- Tabs de navegación -->
      <div class="border-b border-gray-200">
        <nav class="flex -mb-px" aria-label="Tabs">
          <button type="button" id="tab-basic" class="active-tab border-indigo-500 text-indigo-600 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Información básica
          </button>
          <button type="button" id="tab-rewards" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Recompensas y costos
          </button>
          <button type="button" id="tab-restrictions" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Restricciones
          </button>
          <button type="button" id="tab-stages" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm">
            Etapas
          </button>
        </nav>
      </div>

      <!-- Sección de información básica -->
      <div id="section-basic" class="p-6">
        <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
          <div class="sm:col-span-4">
            <label for="title" class="block text-sm font-medium text-gray-700">
              Título de la misión *
            </label>
            <div class="mt-1">
              <input type="text" id="title" name="title" required class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
          </div>

          <div class="sm:col-span-2">
            <label for="type" class="block text-sm font-medium text-gray-700">
              Tipo de misión *
            </label>
            <div class="mt-1">
              <select id="type" name="type" required class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                <option value="story">Historia</option>
                <option value="daily">Diaria</option>
                <option value="weekly">Semanal</option>
                <option value="event">Evento</option>
                <option value="custom" selected>Personalizada</option>
              </select>
            </div>
          </div>

          <div class="sm:col-span-6">
            <label for="description" class="block text-sm font-medium text-gray-700">
              Descripción *
            </label>
            <div class="mt-1">
              <textarea id="description" name="description" rows="4" required class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"></textarea>
            </div>
            <p class="mt-1 text-xs text-gray-500">Describe el contexto de la misión, detalles importantes y objetivos generales.</p>
          </div>
          
          <div class="sm:col-span-3">
            <label for="image" class="block text-sm font-medium text-gray-700">
              URL de imagen
            </label>
            <div class="mt-1">
              <input type="text" id="image" name="image" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">URL de una imagen para representar esta misión (opcional).</p>
          </div>
          
          <div class="sm:col-span-1">
            <label for="levelRequired" class="block text-sm font-medium text-gray-700">
              Nivel requerido
            </label>
            <div class="mt-1">
              <input type="number" id="levelRequired" name="levelRequired" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
          </div>
          
          <div class="sm:col-span-2">
            <label for="difficulty" class="block text-sm font-medium text-gray-700">
              Dificultad
            </label>
            <div class="mt-1">
              <select id="difficulty" name="difficulty" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                <option value="easy">Fácil</option>
                <option value="medium" selected>Media</option>
                <option value="hard">Difícil</option>
                <option value="extreme">Extrema</option>
              </select>
            </div>
          </div>

          <div class="sm:col-span-2">
            <label for="duration" class="block text-sm font-medium text-gray-700">
              Duración (minutos)
            </label>
            <div class="mt-1">
              <input type="number" id="duration" name="duration" min="0" value="0" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">0 = sin límite de tiempo</p>
          </div>
          
          <div class="sm:col-span-2">
            <label for="cooldown" class="block text-sm font-medium text-gray-700">
              Tiempo de recarga (minutos)
            </label>
            <div class="mt-1">
              <input type="number" id="cooldown" name="cooldown" min="0" value="0" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">0 = sin tiempo de recarga</p>
          </div>
          
          <div class="sm:col-span-2">
            <label for="maxParticipants" class="block text-sm font-medium text-gray-700">
              Límite de participantes
            </label>
            <div class="mt-1">
              <input type="number" id="maxParticipants" name="maxParticipants" min="0" value="0" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">0 = sin límite</p>
          </div>
          
          <div class="sm:col-span-3">
            <label for="availableFrom" class="block text-sm font-medium text-gray-700">
              Disponible desde
            </label>
            <div class="mt-1">
              <input type="datetime-local" id="availableFrom" name="availableFrom" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
          </div>
          
          <div class="sm:col-span-3">
            <label for="availableUntil" class="block text-sm font-medium text-gray-700">
              Disponible hasta
            </label>
            <div class="mt-1">
              <input type="datetime-local" id="availableUntil" name="availableUntil" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
          </div>
          
          <div class="sm:col-span-3">
            <div class="flex items-start">
              <div class="flex items-center h-5">
                <input id="featured" name="featured" type="checkbox" class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded">
              </div>
              <div class="ml-3 text-sm">
                <label for="featured" class="font-medium text-gray-700">Misión destacada</label>
                <p class="text-gray-500">Las misiones destacadas aparecen con mayor prioridad</p>
              </div>
            </div>
          </div>
          
          <div class="sm:col-span-3">
            <label for="status" class="block text-sm font-medium text-gray-700">
              Estado
            </label>
            <div class="mt-1">
              <select id="status" name="status" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                <option value="draft" selected>Borrador</option>
                <option value="active">Activa</option>
                <option value="disabled">Deshabilitada</option>
              </select>
            </div>
          </div>
        </div>
      </div>

      <!-- Sección de recompensas y costos -->
      <div id="section-rewards" class="p-6 hidden">
        <div class="mb-6">
          <h3 class="text-lg font-medium text-gray-900 mb-3">Recompensas</h3>
          <p class="text-sm text-gray-500 mb-4">Define las recompensas que obtendrán los jugadores al completar esta misión.</p>
          
          <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
            <div class="sm:col-span-3">
              <label for="rewardExperience" class="block text-sm font-medium text-gray-700">
                Experiencia
              </label>
              <div class="mt-1">
                <input type="number" id="rewardExperience" name="rewardExperience" min="0" value="50" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
              </div>
            </div>
            
            <div class="sm:col-span-3">
              <label for="rewardCurrency" class="block text-sm font-medium text-gray-700">
                Monedas
              </label>
              <div class="mt-1">
                <input type="number" id="rewardCurrency" name="rewardCurrency" min="0" value="10" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
              </div>
            </div>
            
            <div class="sm:col-span-6">
              <label for="rewardSkills" class="block text-sm font-medium text-gray-700">
                Habilidades recompensa
              </label>
              <div class="mt-1">
                <select id="rewardSkills" name="rewardSkills" multiple class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" size="4">
                  <% if (skills && skills.length > 0) { %>
                    <% skills.forEach(skill => { %>
                      <option value="<%= skill._id %>"><%= skill.name %> (<%= skill.category %>)</option>
                    <% }); %>
                  <% } else { %>
                    <option disabled>No hay habilidades disponibles</option>
                  <% } %>
                </select>
                <p class="mt-1 text-xs text-gray-500">Selecciona las habilidades que se desbloquearán al completar la misión</p>
              </div>
            </div>
            
            <div class="sm:col-span-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">
                Items recompensa
              </label>
              <div id="reward-items-container">
                <div class="reward-item grid grid-cols-12 gap-2 mb-2 items-center">
                  <div class="col-span-8">
                    <select name="rewardItems[]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                      <% if (items && items.length > 0) { %>
                        <option value="">-- Selecciona un item --</option>
                        <% items.forEach(item => { %>
                          <option value="<%= item._id %>"><%= item.name %></option>
                        <% }); %>
                      <% } else { %>
                        <option disabled>No hay items disponibles</option>
                      <% } %>
                    </select>
                  </div>
                  <div class="col-span-3">
                    <input type="number" name="rewardItemsQuantity[]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Cantidad">
                  </div>
                  <div class="col-span-1 flex justify-center">
                    <button type="button" class="remove-reward-item text-red-600 hover:text-red-900">
                      <i class="fas fa-trash-alt"></i>
                    </button>
                  </div>
                </div>
              </div>
              
              <div class="mt-2">
                <button type="button" id="add-reward-item" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                  <i class="fas fa-plus mr-2"></i>
                  Añadir item
                </button>
              </div>
            </div>
          </div>
        </div>
        
        <div class="border-t border-gray-200 pt-6">
          <h3 class="text-lg font-medium text-gray-900 mb-3">Costos</h3>
          <p class="text-sm text-gray-500 mb-4">Define los costos que deberán pagar los jugadores para iniciar esta misión (opcional).</p>
          
          <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
            <div class="sm:col-span-3">
              <label for="costCurrency" class="block text-sm font-medium text-gray-700">
                Costo en monedas
              </label>
              <div class="mt-1">
                <input type="number" id="costCurrency" name="costCurrency" min="0" value="0" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
              </div>
            </div>
            
            <div class="sm:col-span-6">
              <label class="block text-sm font-medium text-gray-700 mb-2">
                Items requeridos
              </label>
              <div id="cost-items-container">
                <div class="cost-item grid grid-cols-12 gap-2 mb-2 items-center">
                  <div class="col-span-8">
                    <select name="costItems[]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                      <% if (items && items.length > 0) { %>
                        <option value="">-- Selecciona un item --</option>
                        <% items.forEach(item => { %>
                          <option value="<%= item._id %>"><%= item.name %></option>
                        <% }); %>
                      <% } else { %>
                        <option disabled>No hay items disponibles</option>
                      <% } %>
                    </select>
                  </div>
                  <div class="col-span-3">
                    <input type="number" name="costItemsQuantity[]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Cantidad">
                  </div>
                  <div class="col-span-1 flex justify-center">
                    <button type="button" class="remove-cost-item text-red-600 hover:text-red-900">
                      <i class="fas fa-trash-alt"></i>
                    </button>
                  </div>
                </div>
              </div>
              
              <div class="mt-2">
                <button type="button" id="add-cost-item" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                  <i class="fas fa-plus mr-2"></i>
                  Añadir item
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Sección de restricciones -->
      <div id="section-restrictions" class="p-6 hidden">
        <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
          <div class="sm:col-span-3">
            <label for="raceRestrictions" class="block text-sm font-medium text-gray-700">
              Restricciones de raza
            </label>
            <div class="mt-1">
              <select id="raceRestrictions" name="raceRestrictions" multiple class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" size="6">
                <% if (serverConfig && serverConfig.roleplay.races.length > 0) { %>
                  <% serverConfig.roleplay.races.forEach(race => { %>
                    <option value="<%= race %>"><%= race %></option>
                  <% }); %>
                <% } else { %>
                  <option value="Humano">Humano</option>
                  <option value="Elfo">Elfo</option>
                  <option value="Enano">Enano</option>
                  <option value="Orco">Orco</option>
                  <option value="Tiefling">Tiefling</option>
                <% } %>
              </select>
            </div>
            <p class="mt-1 text-xs text-gray-500">Selecciona las razas que NO pueden participar en esta misión (deja vacío para permitir todas).</p>
          </div>
          
          <div class="sm:col-span-3">
            <label for="classRestrictions" class="block text-sm font-medium text-gray-700">
              Restricciones de clase
            </label>
            <div class="mt-1">
              <select id="classRestrictions" name="classRestrictions" multiple class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" size="6">
                <% if (serverConfig && serverConfig.roleplay.classes.length > 0) { %>
                  <% serverConfig.roleplay.classes.forEach(cls => { %>
                    <option value="<%= cls %>"><%= cls %></option>
                  <% }); %>
                <% } else { %>
                  <option value="Guerrero">Guerrero</option>
                  <option value="Mago">Mago</option>
                  <option value="Clérigo">Clérigo</option>
                  <option value="Pícaro">Pícaro</option>
                  <option value="Bardo">Bardo</option>
                <% } %>
              </select>
            </div>
            <p class="mt-1 text-xs text-gray-500">Selecciona las clases que NO pueden participar en esta misión (deja vacío para permitir todas).</p>
          </div>
          
          <div class="sm:col-span-6">
            <div id="restriction-reasons-container">
              <!-- Los motivos de restricción se generarán dinámicamente en JavaScript -->
            </div>
          </div>
        </div>
      </div>

      <!-- Sección de etapas -->
      <div id="section-stages" class="p-6 hidden">
        <p class="text-sm text-gray-500 mb-4">Define las etapas que componen esta misión. Cada misión puede tener múltiples etapas que el jugador debe completar en orden.</p>
        
        <div id="stages-container">
          <div class="stage-item border border-gray-200 rounded-md p-4 mb-4">
            <div class="flex justify-between items-center mb-4">
              <h4 class="text-base font-medium text-gray-900">Etapa 1</h4>
              <button type="button" class="remove-stage text-red-600 hover:text-red-900">
                <i class="fas fa-trash-alt"></i>
              </button>
            </div>
            
            <div class="grid grid-cols-1 gap-y-4 gap-x-4 sm:grid-cols-6">
              <div class="sm:col-span-6">
                <label class="block text-sm font-medium text-gray-700">
                  Nombre de la etapa
                </label>
                <div class="mt-1">
                  <input type="text" name="stages[name][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                </div>
              </div>
              
              <div class="sm:col-span-6">
                <label class="block text-sm font-medium text-gray-700">
                  Descripción
                </label>
                <div class="mt-1">
                  <textarea name="stages[description][]" rows="2" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"></textarea>
                </div>
              </div>
              
              <div class="sm:col-span-3">
                <label class="block text-sm font-medium text-gray-700">
                  Tipo de tarea
                </label>
                <div class="mt-1">
                  <select name="stages[taskType][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                    <option value="combat">Combate</option>
                    <option value="puzzle">Puzzle</option>
                    <option value="dialogue">Diálogo</option>
                    <option value="collection">Colección</option>
                    <option value="custom" selected>Personalizada</option>
                  </select>
                </div>
              </div>
              
              <div class="sm:col-span-3">
                <label class="block text-sm font-medium text-gray-700">
                  Cantidad objetivo
                </label>
                <div class="mt-1">
                  <input type="number" name="stages[targetAmount][]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                </div>
                <p class="mt-1 text-xs text-gray-500">Número de veces que debe completarse la tarea</p>
              </div>
              
              <div class="sm:col-span-6">
                <label class="block text-sm font-medium text-gray-700">
                  Mensaje de completado
                </label>
                <div class="mt-1">
                  <input type="text" name="stages[completionMessage][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                </div>
                <p class="mt-1 text-xs text-gray-500">Mensaje que se mostrará cuando el jugador complete esta etapa</p>
              </div>
            </div>
          </div>
        </div>
        
        <div class="mt-4">
          <button type="button" id="add-stage" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
            <i class="fas fa-plus mr-2"></i>
            Añadir etapa
          </button>
        </div>
      </div>

      <div class="px-4 py-3 bg-gray-50 text-right sm:px-6 border-t border-gray-200">
        <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Crear Misión
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Navegación por tabs
    const tabBasic = document.getElementById('tab-basic');
    const tabRewards = document.getElementById('tab-rewards');
    const tabRestrictions = document.getElementById('tab-restrictions');
    const tabStages = document.getElementById('tab-stages');
    
    const sectionBasic = document.getElementById('section-basic');
    const sectionRewards = document.getElementById('section-rewards');
    const sectionRestrictions = document.getElementById('section-restrictions');
    const sectionStages = document.getElementById('section-stages');
    
    // Función para cambiar de tab
    function switchTab(activeTab, activeSection) {
      // Resetear todos los tabs
      [tabBasic, tabRewards, tabRestrictions, tabStages].forEach(tab => {
        tab.classList.remove('active-tab', 'border-indigo-500', 'text-indigo-600');
        tab.classList.add('border-transparent', 'text-gray-500');
      });
      
      // Activar el tab seleccionado
      activeTab.classList.add('active-tab', 'border-indigo-500', 'text-indigo-600');
      activeTab.classList.remove('border-transparent', 'text-gray-500');
      
      // Ocultar todas las secciones
      [sectionBasic, sectionRewards, sectionRestrictions, sectionStages].forEach(section => {
        section.classList.add('hidden');
      });
      
      // Mostrar la sección activa
      activeSection.classList.remove('hidden');
    }
    
    tabBasic.addEventListener('click', () => switchTab(tabBasic, sectionBasic));
    tabRewards.addEventListener('click', () => switchTab(tabRewards, sectionRewards));
    tabRestrictions.addEventListener('click', () => switchTab(tabRestrictions, sectionRestrictions));
    tabStages.addEventListener('click', () => switchTab(tabStages, sectionStages));
    
    // Manejo de items de recompensa
    const rewardItemsContainer = document.getElementById('reward-items-container');
    const addRewardItemButton = document.getElementById('add-reward-item');
    
    addRewardItemButton.addEventListener('click', function() {
      const newItem = document.createElement('div');
      newItem.className = 'reward-item grid grid-cols-12 gap-2 mb-2 items-center';
      newItem.innerHTML = `
        <div class="col-span-8">
          <select name="rewardItems[]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            <% if (items && items.length > 0) { %>
              <option value="">-- Selecciona un item --</option>
              <% items.forEach(item => { %>
                <option value="<%= item._id %>"><%= item.name %></option>
              <% }); %>
            <% } else { %>
              <option disabled>No hay items disponibles</option>
            <% } %>
          </select>
        </div>
        <div class="col-span-3">
          <input type="number" name="rewardItemsQuantity[]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Cantidad">
        </div>
        <div class="col-span-1 flex justify-center">
          <button type="button" class="remove-reward-item text-red-600 hover:text-red-900">
            <i class="fas fa-trash-alt"></i>
          </button>
        </div>
      `;
      
      rewardItemsContainer.appendChild(newItem);
      
      // Añadir evento al botón de eliminar
      const removeButtons = document.querySelectorAll('.remove-reward-item');
      removeButtons[removeButtons.length - 1].addEventListener('click', function() {
        rewardItemsContainer.removeChild(newItem);
      });
    });
    
    // Añadir eventos a los botones de eliminar recompensa existentes
    document.querySelectorAll('.remove-reward-item').forEach(button => {
      button.addEventListener('click', function() {
        const item = this.closest('.reward-item');
        rewardItemsContainer.removeChild(item);
      });
    });
    
    // Manejo de items de costo
    const costItemsContainer = document.getElementById('cost-items-container');
    const addCostItemButton = document.getElementById('add-cost-item');
    
    addCostItemButton.addEventListener('click', function() {
      const newItem = document.createElement('div');
      newItem.className = 'cost-item grid grid-cols-12 gap-2 mb-2 items-center';
      newItem.innerHTML = `
        <div class="col-span-8">
          <select name="costItems[]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            <% if (items && items.length > 0) { %>
              <option value="">-- Selecciona un item --</option>
              <% items.forEach(item => { %>
                <option value="<%= item._id %>"><%= item.name %></option>
              <% }); %>
            <% } else { %>
              <option disabled>No hay items disponibles</option>
            <% } %>
          </select>
        </div>
        <div class="col-span-3">
          <input type="number" name="costItemsQuantity[]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Cantidad">
        </div>
        <div class="col-span-1 flex justify-center">
          <button type="button" class="remove-cost-item text-red-600 hover:text-red-900">
            <i class="fas fa-trash-alt"></i>
          </button>
        </div>
      `;
      
      costItemsContainer.appendChild(newItem);
      
      // Añadir evento al botón de eliminar
      const removeButtons = document.querySelectorAll('.remove-cost-item');
      removeButtons[removeButtons.length - 1].addEventListener('click', function() {
        costItemsContainer.removeChild(newItem);
      });
    });
    
    // Añadir eventos a los botones de eliminar costo existentes
    document.querySelectorAll('.remove-cost-item').forEach(button => {
      button.addEventListener('click', function() {
        const item = this.closest('.cost-item');
        costItemsContainer.removeChild(item);
      });
    });
    
    // Manejo de etapas
    const stagesContainer = document.getElementById('stages-container');
    const addStageButton = document.getElementById('add-stage');
    
    addStageButton.addEventListener('click', function() {
      const stageCount = document.querySelectorAll('.stage-item').length + 1;
      
      const newStage = document.createElement('div');
      newStage.className = 'stage-item border border-gray-200 rounded-md p-4 mb-4';
      newStage.innerHTML = `
        <div class="flex justify-between items-center mb-4">
          <h4 class="text-base font-medium text-gray-900">Etapa ${stageCount}</h4>
          <button type="button" class="remove-stage text-red-600 hover:text-red-900">
            <i class="fas fa-trash-alt"></i>
          </button>
        </div>
        
        <div class="grid grid-cols-1 gap-y-4 gap-x-4 sm:grid-cols-6">
          <div class="sm:col-span-6">
            <label class="block text-sm font-medium text-gray-700">
              Nombre de la etapa
            </label>
            <div class="mt-1">
              <input type="text" name="stages[name][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
          </div>
          
          <div class="sm:col-span-6">
            <label class="block text-sm font-medium text-gray-700">
              Descripción
            </label>
            <div class="mt-1">
              <textarea name="stages[description][]" rows="2" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"></textarea>
            </div>
          </div>
          
          <div class="sm:col-span-3">
            <label class="block text-sm font-medium text-gray-700">
              Tipo de tarea
            </label>
            <div class="mt-1">
              <select name="stages[taskType][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
                <option value="combat">Combate</option>
                <option value="puzzle">Puzzle</option>
                <option value="dialogue">Diálogo</option>
                <option value="collection">Colección</option>
                <option value="custom" selected>Personalizada</option>
              </select>
            </div>
          </div>
          
          <div class="sm:col-span-3">
            <label class="block text-sm font-medium text-gray-700">
              Cantidad objetivo
            </label>
            <div class="mt-1">
              <input type="number" name="stages[targetAmount][]" min="1" value="1" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">Número de veces que debe completarse la tarea</p>
          </div>
          
          <div class="sm:col-span-6">
            <label class="block text-sm font-medium text-gray-700">
              Mensaje de completado
            </label>
            <div class="mt-1">
              <input type="text" name="stages[completionMessage][]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md">
            </div>
            <p class="mt-1 text-xs text-gray-500">Mensaje que se mostrará cuando el jugador complete esta etapa</p>
          </div>
        </div>
      `;
      
      stagesContainer.appendChild(newStage);
      
      // Añadir evento al botón de eliminar
      const removeButtons = document.querySelectorAll('.remove-stage');
      removeButtons[removeButtons.length - 1].addEventListener('click', function() {
        stagesContainer.removeChild(newStage);
        
        // Actualizar los números de las etapas
        document.querySelectorAll('.stage-item').forEach((stage, index) => {
          stage.querySelector('h4').textContent = `Etapa ${index + 1}`;
        });
      });
    });
    
    // Añadir eventos a los botones de eliminar etapa existentes
    document.querySelectorAll('.remove-stage').forEach(button => {
      button.addEventListener('click', function() {
        const stage = this.closest('.stage-item');
        stagesContainer.removeChild(stage);
        
        // Actualizar los números de las etapas
        document.querySelectorAll('.stage-item').forEach((stage, index) => {
          stage.querySelector('h4').textContent = `Etapa ${index + 1}`;
        });
      });
    });
    
    // Manejo dinámico de razones de restricción
    const raceSelect = document.getElementById('raceRestrictions');
    const classSelect = document.getElementById('classRestrictions');
    const reasonsContainer = document.getElementById('restriction-reasons-container');
    
    // Función para actualizar las razones de restricción
    function updateRestrictionReasons() {
      reasonsContainer.innerHTML = ''; // Limpiar contenedor
      
      // Obtener razas seleccionadas
      const selectedRaces = Array.from(raceSelect.selectedOptions).map(option => option.value);
      
      // Obtener clases seleccionadas
      const selectedClasses = Array.from(classSelect.selectedOptions).map(option => option.value);
      
      // Añadir campos para razones de restricción de razas
      selectedRaces.forEach(race => {
        const reasonField = document.createElement('div');
        reasonField.className = 'mb-4';
        reasonField.innerHTML = `
          <label class="block text-sm font-medium text-gray-700">
            Razón para restricción de ${race}
          </label>
          <div class="mt-1">
            <input type="text" name="restrictionReasons[${race}]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="¿Por qué esta raza no puede participar?">
          </div>
        `;
        reasonsContainer.appendChild(reasonField);
      });
      
      // Añadir campos para razones de restricción de clases
      selectedClasses.forEach(cls => {
        const reasonField = document.createElement('div');
        reasonField.className = 'mb-4';
        reasonField.innerHTML = `
          <label class="block text-sm font-medium text-gray-700">
            Razón para restricción de ${cls}
          </label>
          <div class="mt-1">
            <input type="text" name="restrictionReasons[${cls}]" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="¿Por qué esta clase no puede participar?">
          </div>
        `;
        reasonsContainer.appendChild(reasonField);
      });
    }
    
    // Eventos para actualizar las razones de restricción
    raceSelect.addEventListener('change', updateRestrictionReasons);
    classSelect.addEventListener('change', updateRestrictionReasons);
    
    // Mejorar la experiencia de usuario para los select múltiples
    const multiSelects = document.querySelectorAll('select[multiple]');
    
    multiSelects.forEach(select => {
      select.addEventListener('mousedown', function(e) {
        if (!e.ctrlKey && !e.metaKey) {
          e.preventDefault();
          
          const option = e.target.closest('option');
          if (!option) return;
          
          const alreadySelected = option.selected;
          
          if (!e.shiftKey) {
            option.selected = !alreadySelected;
          } else {
            // Si se presiona Shift, seleccionar un rango
            const options = Array.from(this.options);
            const lastSelectedIndex = options.findIndex(opt => opt.dataset.lastSelected);
            
            if (lastSelectedIndex >= 0) {
              const currentIndex = options.indexOf(option);
              const start = Math.min(lastSelectedIndex, currentIndex);
              const end = Math.max(lastSelectedIndex, currentIndex);
              
              for (let i = start; i <= end; i++) {
                options[i].selected = true;
              }
            } else {
              option.selected = !alreadySelected;
            }
          }
          
          // Marcar la última opción seleccionada
          this.querySelectorAll('option').forEach(opt => {
            opt.dataset.lastSelected = false;
          });
          option.dataset.lastSelected = true;
          
          const event = new Event('change', { bubbles: true });
          this.dispatchEvent(event);
        }
      });
    });
    
    // Validación del formulario antes de enviar
    document.querySelector('form').addEventListener('submit', function(event) {
      const title = document.getElementById('title').value.trim();
      const description = document.getElementById('description').value.trim();
      
      if (!title) {
        event.preventDefault();
        alert('El título de la misión es obligatorio.');
        switchTab(tabBasic, sectionBasic);
        return;
      }
      
      if (!description) {
        event.preventDefault();
        alert('La descripción de la misión es obligatoria.');
        switchTab(tabBasic, sectionBasic);
        return;
      }
      
      // Verificar etapas
      const stageNames = document.querySelectorAll('input[name="stages[name][]"]');
      const stageDescs = document.querySelectorAll('textarea[name="stages[description][]"]');
      
      for (let i = 0; i < stageNames.length; i++) {
        if (!stageNames[i].value.trim()) {
          event.preventDefault();
          alert(`El nombre de la Etapa ${i + 1} es obligatorio.`);
          switchTab(tabStages, sectionStages);
          stageNames[i].focus();
          return;
        }
        
        if (!stageDescs[i].value.trim()) {
          event.preventDefault();
          alert(`La descripción de la Etapa ${i + 1} es obligatoria.`);
          switchTab(tabStages, sectionStages);
          stageDescs[i].focus();
          return;
        }
      }
    });
});
  </script>
<%- include('../partials/footer') %>