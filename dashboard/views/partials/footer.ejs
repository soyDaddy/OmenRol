</main>
</div>

<!-- Footer -->
<footer class="bg-white shadow-inner mt-10">
  <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
    <div class="flex flex-col md:flex-row justify-between items-center">
      <div class="flex items-center mb-4 md:mb-0">
        <img src="/img/logo.svg" alt="Logo" class="h-6 w-6">
        <span class="ml-2 text-gray-900 font-semibold">OmenRol</span>
        <span class="ml-2 text-gray-500 text-sm">© <%= new Date().getFullYear() %></span>
      </div>
      <div class="flex space-x-6">
        <a href="/legal/privacy" class="text-gray-500 hover:text-gray-900">Privacidad</a>
        <a href="/legal/terms" class="text-gray-500 hover:text-gray-900">Términos</a>
        <a href="/support" class="text-gray-500 hover:text-gray-900">Soporte</a>
      </div>
    </div>
  </div>
</footer>

<script>
  // Toggle user menu
  const userMenuButton = document.getElementById('userMenuButton');
  const userMenu = document.getElementById('userMenu');
  
  if (userMenuButton && userMenu) {
    userMenuButton.addEventListener('click', function() {
      userMenu.classList.toggle('hidden');
    });
    
    document.addEventListener('click', function(event) {
      if (!userMenuButton.contains(event.target) && !userMenu.contains(event.target)) {
        userMenu.classList.add('hidden');
      }
    });
  }
  
  // Toggle theme menu
  const themeMenuButton = document.getElementById('themeMenuButton');
  const themeMenu = document.getElementById('themeMenu');
  
  if (themeMenuButton && themeMenu) {
    themeMenuButton.addEventListener('click', function() {
      themeMenu.classList.toggle('hidden');
    });
    
    document.addEventListener('click', function(event) {
      if (!themeMenuButton.contains(event.target) && !themeMenu.contains(event.target)) {
        themeMenu.classList.add('hidden');
      }
    });
  }
  
  // Toggle mobile menu
  const mobileMenuButton = document.getElementById('mobileMenuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', function() {
      mobileMenu.classList.toggle('hidden');
      
      // Toggle the hamburger/close icon
      const hamburgerIcon = mobileMenuButton.querySelector('.block');
      const closeIcon = mobileMenuButton.querySelector('.hidden');
      
      hamburgerIcon.classList.toggle('hidden');
      hamburgerIcon.classList.toggle('block');
      
      closeIcon.classList.toggle('hidden');
      closeIcon.classList.toggle('block');
    });
  }

  // Función para cambiar tema
  function changeTheme(themeName) {
    // Actualizar el link de CSS
    const themeLink = document.getElementById('theme-css');
    if (themeLink) {
      themeLink.href = `/css/themes/${themeName}.css`;
    }
    
    // Guardar preferencia
    localStorage.setItem('theme', themeName);
    
    // Actualizar atributo data-theme
    document.documentElement.setAttribute('data-theme', themeName);
    
    // Cerrar menú de temas si está abierto
    if (themeMenu) {
      themeMenu.classList.add('hidden');
    }
    
    // Evento personalizado para notificar el cambio de tema
    document.dispatchEvent(new CustomEvent('themeChanged', { detail: { theme: themeName } }));
  }

  // Función para cambiar el modo (minimalista/detallado)
  function toggleMinimalMode() {
    const body = document.body;
    const isMinimal = body.classList.contains('minimal-mode');
    
    // Obtener referencias a los iconos de modo
    const modeIcon = document.getElementById('modeIcon');
    const modeIconMobile = document.getElementById('modeIconMobile');
    
    if (isMinimal) {
      // Cambiar a modo detallado
      body.classList.remove('minimal-mode');
      localStorage.setItem('mode', 'detailed');
      
      // Actualizar iconos
      if (modeIcon) {
        modeIcon.classList.remove('fa-expand');
        modeIcon.classList.add('fa-compress');
      }
      
      if (modeIconMobile) {
        modeIconMobile.classList.remove('fa-expand');
        modeIconMobile.classList.add('fa-compress');
      }
    } else {
      // Cambiar a modo minimalista
      body.classList.add('minimal-mode');
      localStorage.setItem('mode', 'minimal');
      
      // Actualizar iconos
      if (modeIcon) {
        modeIcon.classList.remove('fa-compress');
        modeIcon.classList.add('fa-expand');
      }
      
      if (modeIconMobile) {
        modeIconMobile.classList.remove('fa-compress');
        modeIconMobile.classList.add('fa-expand');
      }
    }
    
    // Evento personalizado para notificar el cambio de modo
    document.dispatchEvent(new CustomEvent('modeChanged', { detail: { minimal: !isMinimal } }));
  }

  // Detectar rendimiento del dispositivo
  function detectPerformance() {
    // Intentar detectar dispositivos de bajo rendimiento
    const isLowEnd = 
      // Dispositivos móviles (no todos, pero aumenta la probabilidad)
      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
      // O navegadores antiguos
      /MSIE|Trident|Edge\/(1[0-5])/i.test(navigator.userAgent) ||
      // O dispositivos con poca memoria (si está disponible)
      (navigator.deviceMemory && navigator.deviceMemory < 4);
    
    return isLowEnd;
  }

  // Inicializar al cargar la página
  document.addEventListener('DOMContentLoaded', function() {
    // Cargar tema guardado (ya se hizo en el <head> pero para mantenerlo consistente)
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    
    // Cargar modo (minimalista/detallado)
    const savedMode = localStorage.getItem('mode');
    if (savedMode === 'minimal') {
      document.body.classList.add('minimal-mode');
      
      // Actualizar iconos
      const modeIcon = document.getElementById('modeIcon');
      const modeIconMobile = document.getElementById('modeIconMobile');
      
      if (modeIcon) modeIcon.classList.replace('fa-compress', 'fa-expand');
      if (modeIconMobile) modeIconMobile.classList.replace('fa-compress', 'fa-expand');
    } else if (savedMode === 'detailed') {
      document.body.classList.remove('minimal-mode');
    } else {
      // Si no hay preferencia guardada, detectar automáticamente
      const isLowEndDevice = detectPerformance();
      if (isLowEndDevice) {
        document.body.classList.add('minimal-mode');
        localStorage.setItem('mode', 'minimal');
        
        // Actualizar iconos
        const modeIcon = document.getElementById('modeIcon');
        const modeIconMobile = document.getElementById('modeIconMobile');
        
        if (modeIcon) modeIcon.classList.replace('fa-compress', 'fa-expand');
        if (modeIconMobile) modeIconMobile.classList.replace('fa-compress', 'fa-expand');
      }
    }
    
    // Agregar eventos a botones de modo
    const modeToggle = document.getElementById('modeToggle');
    const modeToggleMobile = document.getElementById('modeToggleMobile');
    
    if (modeToggle) {
      modeToggle.addEventListener('click', toggleMinimalMode);
    }
    
    if (modeToggleMobile) {
      modeToggleMobile.addEventListener('click', toggleMinimalMode);
    }
    
    // Ocultar el loader
    const loader = document.getElementById('loader');
    if (loader) {
      loader.style.display = 'none';
    }
  });
</script>
</body>
</html>