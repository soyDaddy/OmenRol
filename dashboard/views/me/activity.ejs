<%- include('../partials/header') %>
<br>
<!-- Timeline de actividad -->
<div class="bg-white shadow rounded-lg overflow-hidden mb-6">
  <div class="px-4 py-3 bg-gray-50 border-b border-gray-200 flex justify-between items-center">
    <h2 class="text-lg font-medium text-gray-900">Historial de actividades</h2>
    <% if (activities && activities.length > 0) { %>
      <a href="/me/activity/export" class="inline-flex items-center px-3 py-1 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
        <i class="fas fa-download mr-2"></i>Exportar
      </a>
    <% } %>
  </div>
  <div class="px-4 py-5 sm:p-6">
    <div class="flow-root" id="activity-container">
      <!-- Incluir el parcial de actividades -->
      <%- include('./activity-items', { groupedActivities }) %>
      
      <!-- Paginación -->
      <% if (pagination && pagination.total > 0 && pagination.pages > 1) { %>
        <div class="mt-6 text-center">
          <button id="loadMoreBtn" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" 
                  data-current-page="<%= pagination.page %>" 
                  data-total-pages="<%= pagination.pages %>"
                  <%= pagination.page >= pagination.pages ? 'disabled' : '' %>>
            <i class="fas fa-sync-alt mr-2"></i>Cargar más
          </button>
        </div>
      <% } %>
    </div>
  </div>
</div>
  
<!-- Estadísticas de actividad -->
<div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
  <div class="bg-white shadow rounded-lg overflow-hidden">
    <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
      <h2 class="text-lg font-medium text-gray-900">Actividad por tipo</h2>
    </div>
    <div class="px-4 py-5 sm:p-6">
      <canvas id="activityTypeChart" height="250"></canvas>
    </div>
  </div>
  
  <div class="bg-white shadow rounded-lg overflow-hidden">
    <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
      <h2 class="text-lg font-medium text-gray-900">Actividad por servidor</h2>
    </div>
    <div class="px-4 py-5 sm:p-6">
      <canvas id="activityServerChart" height="250"></canvas>
    </div>
  </div>
</div>

<!-- Resumen de actividad -->
<div class="bg-white shadow rounded-lg overflow-hidden">
  <div class="px-4 py-3 bg-gray-50 border-b border-gray-200">
    <h2 class="text-lg font-medium text-gray-900">Resumen de actividad</h2>
  </div>
  <div class="px-4 py-5 sm:p-6">
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
      <div class="flex items-center">
        <div class="flex-shrink-0 h-12 w-12 bg-indigo-100 rounded-full flex items-center justify-center mr-4">
          <i class="fas fa-calendar-alt text-indigo-600 text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Total actividades</p>
          <p class="mt-1 text-2xl font-semibold text-gray-900"><%= summary.totalActivities %></p>
        </div>
      </div>
      
      <div class="flex items-center">
        <div class="flex-shrink-0 h-12 w-12 bg-green-100 rounded-full flex items-center justify-center mr-4">
          <i class="fas fa-check-circle text-green-600 text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Misiones completadas</p>
          <p class="mt-1 text-2xl font-semibold text-gray-900"><%= summary.completedQuests %></p>
        </div>
      </div>
      
      <div class="flex items-center">
        <div class="flex-shrink-0 h-12 w-12 bg-red-100 rounded-full flex items-center justify-center mr-4">
          <i class="fas fa-fist-raised text-red-600 text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Combates</p>
          <p class="mt-1 text-2xl font-semibold text-gray-900"><%= summary.combats %></p>
        </div>
      </div>
      
      <div class="flex items-center">
        <div class="flex-shrink-0 h-12 w-12 bg-yellow-100 rounded-full flex items-center justify-center mr-4">
          <i class="fas fa-coins text-yellow-600 text-xl"></i>
        </div>
        <div>
          <p class="text-sm text-gray-500">Monedas ganadas</p>
          <p class="mt-1 text-2xl font-semibold text-gray-900"><%= summary.totalCurrency.toLocaleString() %></p>
        </div>
      </div>
    </div>
  </div>
</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Datos para los gráficos desde el backend
    const typeChartData = <%- JSON.stringify(chartData.byType || []) %>;
    const serverChartData = <%- JSON.stringify(chartData.byServer || []) %>;
    
    // Mapeo de tipos de actividad para etiquetas amigables
    const typeLabels = {
      command: 'Comandos',
      quest: 'Misiones',
      combat: 'Combates',
      levelup: 'Subidas de nivel',
      item: 'Items',
      currency: 'Monedas'
    };
    
    // Mapeo de colores por tipo
    const typeColors = {
      command: 'rgba(107, 114, 128, 0.8)', // gray-500
      quest: 'rgba(16, 185, 129, 0.8)',    // green-500
      combat: 'rgba(239, 68, 68, 0.8)',     // red-500
      levelup: 'rgba(79, 70, 229, 0.8)',    // indigo-600
      item: 'rgba(14, 165, 233, 0.8)',      // sky-500
      currency: 'rgba(245, 158, 11, 0.8)'   // amber-500
    };
    
    // Gráfico de tipos de actividad
    if (document.getElementById('activityTypeChart')) {
      const typeCtx = document.getElementById('activityTypeChart').getContext('2d');
      
      // Preparar datos para el gráfico
      const preparedTypeData = {
        labels: typeChartData.map(item => typeLabels[item.type] || item.type),
        datasets: [{
          data: typeChartData.map(item => item.count),
          backgroundColor: typeChartData.map(item => typeColors[item.type] || 'rgba(107, 114, 128, 0.8)'),
          borderWidth: 1
        }]
      };
      
      new Chart(typeCtx, {
        type: 'doughnut',
        data: preparedTypeData,
        options: {
          responsive: true,
          plugins: {
            legend: {
              position: 'right',
            }
          }
        }
      });
    }
    
    // Gráfico por servidor
    if (document.getElementById('activityServerChart')) {
      const serverCtx = document.getElementById('activityServerChart').getContext('2d');
      
      // Preparar datos para el gráfico
      const preparedServerData = {
        labels: serverChartData.map(item => item.serverName),
        datasets: [{
          label: 'Actividades',
          data: serverChartData.map(item => item.count),
          backgroundColor: 'rgba(79, 70, 229, 0.8)', // indigo-600
          borderColor: 'rgba(67, 56, 202, 1)', // indigo-700
          borderWidth: 1
        }]
      };
      
      new Chart(serverCtx, {
        type: 'bar',
        data: preparedServerData,
        options: {
          responsive: true,
          plugins: {
            legend: {
              display: false
            }
          },
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }
    
    // Botón de cargar más
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    if (loadMoreBtn) {
      loadMoreBtn.addEventListener('click', function() {
        // Obtener datos de paginación
        const currentPage = parseInt(this.dataset.currentPage);
        const totalPages = parseInt(this.dataset.totalPages);
        const nextPage = currentPage + 1;
        
        // Verificar si hay más páginas para cargar
        if (nextPage > totalPages) {
          return;
        }
        
        // Cambiar estado del botón a cargando
        const oldHtml = this.innerHTML;
        this.innerHTML = '<svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-indigo-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Cargando...';
        this.disabled = true;
        
        // Preparar parámetros de consulta
        const params = new URLSearchParams(window.location.search);
        params.set('page', nextPage);
        
        // Realizar petición AJAX para cargar más actividades
        fetch(`/me/activity/load-more?${params.toString()}`)
          .then(response => {
            if (!response.ok) {
              throw new Error('Error al cargar más actividades');
            }
            return response.text();
          })
          .then(html => {
            // Obtener el elemento timeline
            const timeline = document.getElementById('activity-timeline');
            
            // Insertar el nuevo HTML antes del botón de cargar más
            if (timeline) {
              // Crear un elemento temporal para procesar el HTML
              const temp = document.createElement('div');
              temp.innerHTML = html;
              
              // Añadir cada nuevo elemento al timeline
              const newItems = temp.querySelectorAll('li');
              newItems.forEach(item => {
                timeline.insertBefore(item, loadMoreBtn.parentNode.parentNode);
              });
            } else {
              // Si no existe el timeline, simplemente añadir el HTML al contenedor
              document.getElementById('activity-container').insertAdjacentHTML('beforeend', html);
            }
            
            // Actualizar el botón
            this.innerHTML = oldHtml;
            this.disabled = false;
            this.dataset.currentPage = nextPage;
            
            // Si hemos llegado a la última página, deshabilitar el botón
            if (nextPage >= totalPages) {
              this.disabled = true;
            }
          })
          .catch(error => {
            console.error('Error:', error);
            this.innerHTML = oldHtml;
            this.disabled = false;
            
            // Mostrar mensaje de error
            const errorMsg = document.createElement('div');
            errorMsg.className = 'mt-2 text-sm text-red-600';
            errorMsg.textContent = 'Error al cargar más actividades. Inténtalo de nuevo.';
            this.parentNode.appendChild(errorMsg);
            
            // Eliminar mensaje después de 3 segundos
            setTimeout(() => {
              if (errorMsg.parentNode) {
                errorMsg.parentNode.removeChild(errorMsg);
              }
            }, 3000);
          });
      });
    }
  });
</script>

<%- include('../partials/footer') %>